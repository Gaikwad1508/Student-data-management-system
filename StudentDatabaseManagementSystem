def addstudent():
    def submitadd():
        id=idval.get()
        name=nameval.get()
        mobile=mobileval.get()
        email=emailval.get()
        address=addressval.get()
        gender=genderval.get()
        dob=dobval.get()
        addeddate=time.strftime("%d/%m/%Y")
        addedtime=time.strftime("%H:%M:%S")
        try:
            strr='insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'
            mycursor.execute(strr,(id,name,mobile,email,address,gender,dob,addeddate,addedtime))
            con.commit()
            res=messagebox.askyesno('Notifications', 'added successfully..Do you want to clean the form?', parent=addroot)
            if(res==True):
                idval.set('')
                nameval.set('')
                mobileval.set('')
                emailval.set('')  
                addressval.set('')
                genderval.set('')
                dobval.set('')
        except:
            messagebox.showerror('Notifications', 'Id is already exists.....Try another id', parent=addroot)
        strr='select * from studentdata1'
        mycursor.execute(strr)
        datas=mycursor.fetchall()
        studenttable.delete(* studenttable.get_children())
        for i in datas: 
            vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8]]
            studenttable.insert('',END, values=vv)
            print(vv)

    addroot=Toplevel(master=DataEntryFrame)
    addroot.grab_set()
    addroot.geometry('470x470+220+200')
    addroot.title('Student Management System')
    addroot.config(bg='blue')
    addroot.iconbitmap('iconStudent.ico')
    addroot.resizable(False, False)
    #------------------Add student label--------
    idlabel=Label(addroot, text='Enter id:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    idlabel.place(x=10, y=10)

    namelabel=Label(addroot, text='Enter Name:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    namelabel.place(x=10, y=70)

    mobilelabel=Label(addroot, text='Enter Mobile:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    mobilelabel.place(x=10, y=130)

    emaillabel=Label(addroot, text='Enter Email:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    emaillabel.place(x=10, y=190)

    addresslabel=Label(addroot, text='Enter Address:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    addresslabel.place(x=10, y=250)

    genderlabel=Label(addroot, text='Enter Gender:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    genderlabel.place(x=10, y=310)

    doblabel=Label(addroot, text='Enter D.O.B:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    doblabel.place(x=10, y=370)

#--------------------------------------Add Student Entry------------------------
    idval=StringVar()
    nameval=StringVar()
    mobileval=StringVar()
    emailval=StringVar()
    addressval=StringVar()
    genderval=StringVar()
    dobval=StringVar()

    identry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=idval)
    identry.place(x=250, y=10)
    
    nameentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=nameval)
    nameentry.place(x=250, y=70)
    
    mobileentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=mobileval)
    mobileentry.place(x=250, y=130)
    
    emailentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=emailval)
    emailentry.place(x=250, y=190)
    
    addressentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=addressval)
    addressentry.place(x=250, y=250)
    
    genderentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=genderval)
    genderentry.place(x=250, y=310)
    
    dobentry=Entry(addroot, font=('roman', 15, 'bold'), bd=5, textvariable=dobval)
    dobentry.place(x=250, y=370)

    #-------------------------Add Button---------------
    submitbutton=Button(addroot, text='Submit', font=('roman', 15, 'bold'), width=20, bd=5, activebackground='red', activeforeground='white', bg='gray', command=submitadd)
    submitbutton.place(x=150, y=420)


def searchstudent():
    def search():
        id=idval.get()
        name=nameval.get()
        mobile=mobileval.get()
        email=emailval.get()
        address=addressval.get()
        gender=genderval.get()
        dob=dobval.get()
        addeddate=time.strftime("%d/%m/%Y")
        if(id!=''):
            strr='select * from studentdata1 where id=%s'
            mycursor.execute(strr,(id))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv)
                print(vv)
        elif(name!=''):
            strr='select * from studentdata1 where name=%s'
            mycursor.execute(strr,(name))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv)  
                print(vv)      
        elif(mobile!=''):
            strr='select * from studentdata1 where mobile=%s'
            mycursor.execute(strr,(mobile))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv)   
                print(vv)     
        elif(email!=''):
            strr='select * from studentdata1 where email=%s'
            mycursor.execute(strr,(email))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv)
                print(vv)        
        elif(address!=''):
            strr='select * from studentdata1 where address=%s'
            mycursor.execute(strr,(address))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv)
                print(vv)        
        elif(gender!=''):
            strr='select * from studentdata1 where gender=%s'
            mycursor.execute(strr,(gender))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv) 
                print(vv)       
        elif(dob!=''):
            strr='select * from studentdata1 where dob=%s'
            mycursor.execute(strr,(dob))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv) 
                print(vv)       
        elif(addeddate!=''):
            strr='select * from studentdata1 where addeddate=%s'
            mycursor.execute(strr,(addeddate))
            datas=mycursor.fetchall()
            studenttable.delete(* studenttable.get_children())
            for i in datas:
                vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
                studenttable.insert('', END, values=vv) 
                print(vv)               

    searchroot=Toplevel(master=DataEntryFrame)
    searchroot.grab_set()
    searchroot.geometry('470x470+220+200')
    searchroot.title('Student Management System')
    searchroot.config(bg='blue')
    searchroot.iconbitmap('iconStudent.ico')
    searchroot.resizable(False, False)
    #------------------search student label--------
    idlabel=Label(searchroot, text='Enter id:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    idlabel.place(x=10, y=10)

    namelabel=Label(searchroot, text='Enter Name:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    namelabel.place(x=10, y=60)

    mobilelabel=Label(searchroot, text='Enter Mobile:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    mobilelabel.place(x=10, y=110)

    emaillabel=Label(searchroot, text='Enter Email:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    emaillabel.place(x=10, y=160)

    addresslabel=Label(searchroot, text='Enter Address:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    addresslabel.place(x=10, y=210)

    genderlabel=Label(searchroot, text='Enter Gender:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    genderlabel.place(x=10, y=260)

    doblabel=Label(searchroot, text='Enter D.O.B:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    doblabel.place(x=10, y=310)

    datelabel=Label(searchroot, text='Enter Date:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    datelabel.place(x=10, y=360)

#--------------------------------------search Student Entry------------------------
    idval=StringVar()
    nameval=StringVar()
    mobileval=StringVar()
    emailval=StringVar()
    addressval=StringVar()
    genderval=StringVar()
    dobval=StringVar()
    dateval=StringVar()

    identry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=idval)
    identry.place(x=250, y=10)
    
    nameentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=nameval)
    nameentry.place(x=250, y=60)
    
    mobileentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=mobileval)
    mobileentry.place(x=250, y=110)
    
    emailentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=emailval)
    emailentry.place(x=250, y=160)
    
    addressentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=addressval)
    addressentry.place(x=250, y=210)
    
    genderentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=genderval)
    genderentry.place(x=250, y=260)
    
    dobentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=dobval)
    dobentry.place(x=250, y=310)

    dateentry=Entry(searchroot, font=('roman', 15, 'bold'), bd=5, textvariable=dateval)
    dateentry.place(x=250, y=360)

    #-------------------------search Button---------------
    searchbutton=Button(searchroot, text='Submit', font=('roman', 15, 'bold'), width=20, bd=5, activebackground='red', activeforeground='white', bg='gray', command=search)
    searchbutton.place(x=150, y=410)

def updatestudent():
    def update():
        id=idval.get()
        name=nameval.get()
        mobile=mobileval.get()
        email=emailval.get()
        address=addressval.get()
        gender=genderval.get()
        dob=dobval.get()
        date=dateval.get()
        time=timeval.get()

        strr='update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s, time=%s where id=%s'
        mycursor.execute(strr,(name, mobile, email, address, gender, dob, date, time, id))
        con.commit()
        messagebox.showinfo('Notifications', 'Id {} modified successfully...'.format(id), parent=updateroot) 
        strr='select * from studentdata1'
        mycursor.execute(strr)
        datas=mycursor.fetchall()
        studenttable.delete(* studenttable.get_children())
        for i in datas:
            vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
            studenttable.insert('', END, values=vv)  
            print(vv)      
    
    updateroot=Toplevel(master=DataEntryFrame)
    updateroot.grab_set()
    updateroot.geometry('470x510+220+200')
    updateroot.title('Student Management System')
    updateroot.config(bg='white')
    updateroot.iconbitmap('iconStudent.ico')
    updateroot.resizable(False, False)
    #------------------Add student label--------
    idlabel=Label(updateroot, text='Update id:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    idlabel.place(x=10, y=10)

    namelabel=Label(updateroot, text='Update Name:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    namelabel.place(x=10, y=60)

    mobilelabel=Label(updateroot, text='Update Mobile:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    mobilelabel.place(x=10, y=110)

    emaillabel=Label(updateroot, text='Update Email:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    emaillabel.place(x=10, y=160)

    addresslabel=Label(updateroot, text='Update Address:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    addresslabel.place(x=10, y=210)

    genderlabel=Label(updateroot, text='Update Gender:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    genderlabel.place(x=10, y=260)

    doblabel=Label(updateroot, text='Update D.O.B:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    doblabel.place(x=10, y=310)

    datelabel=Label(updateroot, text='Update Date:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    datelabel.place(x=10, y=360)

    timelabel=Label(updateroot, text='Update Time:', bg='DodgerBlue2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=12, anchor='w')
    timelabel.place(x=10, y=410)

#--------------------------------------Add Student Entry------------------------
    idval=StringVar()
    nameval=StringVar()
    mobileval=StringVar()
    emailval=StringVar()
    addressval=StringVar()
    genderval=StringVar()
    dobval=StringVar()
    dateval=StringVar()
    timeval=StringVar()

    identry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=idval)
    identry.place(x=250, y=10)
    
    nameentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=nameval)
    nameentry.place(x=250, y=60)
    
    mobileentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=mobileval)
    mobileentry.place(x=250, y=110)
    
    emailentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=emailval)
    emailentry.place(x=250, y=160)
    
    addressentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=addressval)
    addressentry.place(x=250, y=210)
    
    genderentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=genderval)
    genderentry.place(x=250, y=260)
    
    dobentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=dobval)
    dobentry.place(x=250, y=310)

    dobentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=dateval)
    dobentry.place(x=250, y=360)

    timeentry=Entry(updateroot, font=('roman', 15, 'bold'), bd=5, textvariable=timeval)
    timeentry.place(x=250, y=410)

    #-------------------------Add Button---------------
    submitbutton=Button(updateroot, text='Submit', font=('roman', 15, 'bold'), width=20, bd=5, activebackground='red', activeforeground='white', bg='gray', command=update)
    submitbutton.place(x=150, y=460)

    cc=studenttable.focus()
    content=studenttable.item(cc)
    pp=content['values']
    if(len(pp)!=0):
                idval.set(pp[0])
                nameval.set(pp[1])
                mobileval.set(pp[2])
                emailval.set(pp[3])  
                addressval.set(pp[4])
                genderval.set(pp[5])
                dobval.set(pp[6])
                dateval.set(pp[7])
                timeval.set(pp[8])

        

def deletestudent():
    cc=studenttable.focus()
    content=studenttable.item(cc)
    pp=content['values'][0]
    strr='delete from studentdata1 where id=%s'
    mycursor.execute(strr,(pp))
    con.commit()
    messagebox.showinfo('Notifications', 'Id {} deleted successfully...'.format(pp))
    strr='select * from studentdata1'
    mycursor.execute(strr)
    datas=mycursor.fetchall()
    studenttable.delete(* studenttable.get_children())
    for i in datas:
        vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7]]
        studenttable.insert('', END, values=vv)  
        print(vv)      

def showstudent():
        strr='select * from studentdata1'
        mycursor.execute(strr)
        datas=mycursor.fetchall()
        studenttable.delete(* studenttable.get_children())
        for i in datas: 
            vv=[i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8]]
            studenttable.insert('',END, values=vv)
            print(vv)

def exportstudent():
    ff = filedialog.asksaveasfilename(defaultextension=".csv", filetypes=[("CSV files", "*.csv")])
    if ff:
        gg = studenttable.get_children()
        id, name, mobile, email, address, gender, dob, addeddate, addedtime = [], [], [], [], [], [], [], [], []
        
        for i in gg:
            content = studenttable.item(i)
            pp = content['values']
            id.append(pp[0])
            name.append(pp[1])
            mobile.append(pp[2])
            email.append(pp[3])
            address.append(pp[4])
            gender.append(pp[5])
            dob.append(pp[6])
            addeddate.append(pp[7])
            addedtime.append(pp[8])
        
        data = {
            'Id': id,
            'Name': name,
            'Mobile': mobile,
            'Email': email,
            'Address': address,
            'Gender': gender,
            'D.O.B.': dob,
            'Added Date': addeddate,
            'Added time': addedtime
        }
        
        df = pandas.DataFrame(data)
        df.to_csv(ff, index=False)
        messagebox.showinfo('Notifications', 'Student data is saved in {}'.format(ff))


def exitstudent():
    res=messagebox.askyesno('Notification', 'Do you want to exit?')
    if(res==True):
        root.destroy()
   
#------------------Connection of database----------
def ConnectDB():
    def submitdb():
        #global con, mycursor
        #host=hostval.get()
        #user=userval.get()
        #password=passwordval.get()

        host='localhost'
        user='root'
        password='Abhi@2003'

        try:
            con=pymysql.connect(host=host, user=user, password=password)
            mycursor=con.cursor()
        except:
            messagebox.showerror('Notifications', 'Data is incorrect, Please try again')
            return
        try:
            strr='create database studentmanagementsystem1'
            mycursor.execute(strr)
            strr='use studentmanagementsystem1'
            mycursor.execute(strr)
            strr='create table studentdata1(id int, name varchar(30), mobile varchar(12), email varchar(30), address varchar(50), gender varchar(8), dob varchar(15), date varchar(15), time varchar(15))'
            mycursor.execute(strr)
            strr='alter table studentdata1 modify column id int not null'
            mycursor.execute(strr)
            strr='alter table studentdata1 modify column id int primary key'
            mycursor.execute(strr)
            messagebox.showinfo('Notification', 'Database created and now you are connected to database.')
        except:
            strr='use studentmanagementsystem1'
            mycursor.execute(strr)
            messagebox.showinfo('Notification', 'You are connected to database.')
            

    dbroot=Toplevel()
    dbroot.grab_set()
    dbroot.geometry('470x250+800+230')
    dbroot.iconbitmap('iconStudent.ico')
    dbroot.resizable(False, False)
    dbroot.config(bg='blue')

    #------------------ConnectDB Labels------------
    hostlabel=Label(dbroot, text='Enter Host:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=13, anchor='w')
    hostlabel.place(x=10, y=10)

    userlabel=Label(dbroot, text='Enter User:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=13, anchor='w')
    userlabel.place(x=10, y=70)

    passwordlabel=Label(dbroot, text='Enter Password:', bg='gold2', font=('times', 20, 'bold'), relief=GROOVE, borderwidth=3, width=13, anchor='w')
    passwordlabel.place(x=10, y=130)

    #------------------ConnectDB Entry---------------
    hostval=StringVar()
    userval=StringVar()
    passwordval=StringVar()

    hostentry= Entry(dbroot, font=('roman', 15, 'bold'), bd=5, textvariable=hostval)
    hostentry.place(x=250, y=10)

    userentry= Entry(dbroot, font=('roman', 15, 'bold'), bd=5, textvariable=userval)
    userentry.place(x=250, y=70)

    passwordentry= Entry(dbroot, font=('roman', 15, 'bold'), bd=5, textvariable=passwordval)
    passwordentry.place(x=250, y=130)

    #-----------------connectDB submitbutton--------------
    submitbutton=Button(dbroot, text='Submit', font=('roman', 15, 'bold'), bd=5, bg='red', width=20, activebackground='blue', activeforeground='white', command=submitdb)
    submitbutton.place(x=150, y=190)

    dbroot.mainloop()
#---------------------------------------
def tick():
    time_string=time.strftime("%H:%M:%S")
    date_string=time.strftime("%d/%m%y")
    clock.config(text='Date:'+date_string+"\n"+"Time:"+time_string)
    clock.after(200, tick)
#--------------------Intro Slider------------------
import random
colors=['red', 'green', 'blue', 'yellow', 'pink', 'red2', 'gold2']
def IntroLabelColorTick():
    fg=random.choice(colors)
    SliderLabel.config(fg=fg)
    SliderLabel.after(2, IntroLabelColorTick)
def IntroLabelTick():
    global count, text
    if(count>=len(ss)):
        count=0
        text=''
        SliderLabel.config(text=text)
    else:
        text=text+ss[count]
        SliderLabel.config(text=text)
        count+=1
    SliderLabel.after(200, IntroLabelTick)

from tkinter import *
from tkinter import messagebox, Toplevel, filedialog
from tkinter.ttk import Treeview
from tkinter import ttk
import time
import pymysql
import pandas
from pandas import *
root=Tk()
root.title('Student Management System')
root.config(bg='deepskyblue')
root.geometry('1174x700+200+50')
root.iconbitmap('iconStudent.ico')
root.resizable(False, False)

#-----------------Frames--------------------
#####-------------Data Entry Frame-------------------
DataEntryFrame=Frame(root, bg='white', relief=GROOVE, borderwidth=5)
DataEntryFrame.place(x=10,y=80, width=500, height=600)
frontlabel=Label(DataEntryFrame, text='------------Welcome-------------', width=30, font=('arial', 22, 'italic bold'), bg='gold2')
frontlabel.pack(side=TOP, expand=True)

addbtn=Button(DataEntryFrame, text='1) Add Student', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=addstudent)
addbtn.pack(side=TOP, expand=True)

searchbtn=Button(DataEntryFrame, text='2) Search Student', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=searchstudent)
searchbtn.pack(side=TOP, expand=True)

deletebtn=Button(DataEntryFrame, text='3) Delete Student', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=deletestudent)
deletebtn.pack(side=TOP, expand=True)

updatebtn=Button(DataEntryFrame, text='4) Update Student', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=updatestudent)
updatebtn.pack(side=TOP, expand=True)

showbtn=Button(DataEntryFrame, text='5) Show All', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=showstudent)
showbtn.pack(side=TOP, expand=True)

exportbtn=Button(DataEntryFrame, text='6) Export Data', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=exportstudent)
exportbtn.pack(side=TOP, expand=True)

exitbtn=Button(DataEntryFrame, text='7) Exit', width=25, font=('chiller', 20, 'bold'), bd=6, bg='skyblue3', activebackground='blue', relief=RIDGE, activeforeground='white', command=exitstudent)
exitbtn.pack(side=TOP, expand=True)

ShowDataFrame=Frame(root, bg='gold2', relief=GROOVE, borderwidth=5)
ShowDataFrame.place(x=550,y=80, width=620, height=600)

####------------------------------------Show Data Frame-----------------
style=ttk.Style()
style.configure('Treeview.Heading', font=('chiller', 20, 'bold'), foreground='blue')
style.configure('Treeview', font=('times', 'bold', 15), background='cyan', foreground='black')
scroll_x=Scrollbar(ShowDataFrame, orient=HORIZONTAL)
scroll_y=Scrollbar(ShowDataFrame, orient=VERTICAL)
studenttable=Treeview(ShowDataFrame, columns=('Id', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added date', 'Added time'), yscrollcommand=scroll_y.set, xscrollcommand=scroll_x.set)
scroll_x.pack(side=BOTTOM, fill=X)
scroll_y.pack(side=RIGHT, fill=Y)
scroll_x.config(command=studenttable.xview)
scroll_y.config(command=studenttable.yview)

studenttable.heading('Id', text='ID')
studenttable.heading('Name', text='Name')
studenttable.heading('Mobile No.', text='Mobile No.')
studenttable.heading('Email', text='Email')
studenttable.heading('Address', text='Address')
studenttable.heading('Gender', text='Gender')
studenttable.heading('D.O.B', text='D.O.B')
studenttable.heading('Added date', text='Added date')
studenttable.heading('Added time', text='Added time')
studenttable['show']='headings'
studenttable.column('Id', width=100)
studenttable.column('Name', width=200)
studenttable.column('Mobile No.', width=200)
studenttable.column('Email', width=300)
studenttable.column('Address', width=200)
studenttable.column('Gender', width=100)
studenttable.column('D.O.B', width=150)
studenttable.column('Added date', width=150)
studenttable.column('Added time', width=150)

studenttable.pack(fill=BOTH, expand=1)

#------------------Slider---------------------
ss='Welcome to Student Management System'
count=0
text=''
#---------------------------------------------d

SliderLabel=Label(root, text=ss, font=("chiller", 30, "italic bold"), relief=RIDGE, borderwidth=4, width=35, bg='cyan')
SliderLabel.place(x=260, y=0)
IntroLabelTick()
IntroLabelColorTick()

#--------------------Clock----------------------
clock=Label(root, font=('times', 14, 'bold'), relief=RIDGE, borderwidth=4, bg='lawn green')
clock.place(x=0, y=0)
tick()

#---------------------Connect Database Button----
connectbutton= Button(root, text='Connect to Database', width=23, font=('chiller', 19, "italic bold"), relief=RIDGE, borderwidth=4, bg='green2', activebackground='blue', activeforeground='white', command=ConnectDB)
connectbutton.place(x=930, y=0)

root.mainloop()
